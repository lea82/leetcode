/*
Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.
*/

class Solution {
public:
    bool isAnagram(string s, string t) {
        //hash table to record the number of apparences of each alphabet in the string
        if (s.size() != t.size()) return false;
        int n = s.size();
        unordered_map<char, int> counts;
        for (int i = 0; i<n; i++){
            counts[s[i]]++;
            counts[t[i]]--;
        }
        for (auto count: counts){
            if (count.second) return false; //if is not zero, return false
        }
        return true;
    }
};
