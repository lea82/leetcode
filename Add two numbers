/*
You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
*/
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode dummy(0);
        ListNode *head = &dummy;
        int c = 0; //carry
        while (l1 || l2){
            int a = l1? l1->val : 0;
            int b = l2? l2->val : 0;
            head->next = new ListNode((a+b+c) %10);
            c = (a+b+c)/10;
            head = head->next;
            l1 = l1? l1->next : nullptr;
            l2 = l2? l2->next : nullptr;
        }
        if (c) head->next= new ListNode(c);
        return dummy.next;
    }
};
