/*
Evaluate Reverse Polish Notation
Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
  */
  class Solution {
private:
    bool isOperator(string &s){
        return (s.size()==1 && string("+-*/").find(s) !=string::npos);
    }
public:
    int evalRPN(vector<string>& tokens) {
        stack<string> stk;
        for (auto token:tokens){
            if (!isOperator(token)) stk.push(token);
            else {
                int y = stoi(stk.top());
                stk.pop();
                int x = stoi(stk.top());
                stk.pop();
                switch (token[0]){
                case('+'): x+=y; break;
                case('-'): x-=y; break;
                case('*'): x*=y; break;
                default: x/=y; }
                stk.push(to_string(x));
            }
        }
        return stoi(stk.top());
    }
};
