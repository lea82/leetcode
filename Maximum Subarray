/*
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
the contiguous subarray [4,−1,2,1] has the largest sum = 6.
*/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int res=nums[0], sum=0; //DP sum[i] = max(sum[i-1]+nums[i], nums[i]), target res = max(sum[i])
        for (int i =0; i<nums.size(); i++){
            sum =max (sum + nums[i], nums[i]);
            res = max(sum,res);
        }
            
        return res;
    }
};
