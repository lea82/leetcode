/*Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
*/

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int res = 0;
        int min_gap = INT_MAX;
        int len = nums.size();
        sort(nums.begin(),nums.end());
        for (int a = 0; a <= len-2; a++){ 
            int b = a+1;
            int c = len-1;
            while (b < c){
                int sum = nums[a]+nums[b]+nums[c];
                int gap = abs(sum - target);
                if (gap < min_gap) {
                    min_gap = gap;
                    res = sum;
                } 
                if (sum < target) b++;
                else c--;
            }
        }
       return res; 
    }
};
