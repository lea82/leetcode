/*
Given an array of integers, find out whether there are two distinct indices i and j in the array 
such that the difference between nums[i] and nums[j] is at most t 
and the difference between i and j is at most k. 
*/
class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        int n = nums.size();
        if (k == 0 || t < 0 || n < 2) return false;
        set<int> window;
        for (int i = 0; i< n; i++) {
            if (i > k) window.erase(nums[i-k-1]); //keep a set container of size k+1
            set<int>::iterator lower = window.lower_bound(nums[i] - t); //returns iterator to the first element >= nums[i]-t
            if (lower != window.end() && abs(*lower - nums[i] <= t)) return true;
            window.insert(nums[i]);
        }
        return false;
    }
};
