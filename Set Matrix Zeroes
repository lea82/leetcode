/*
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.*/
1) two variables
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        //two vairables only
        const int m=matrix.size();
        const int n=matrix[0].size();
        bool row_has_zero = false;
        bool col_has_zero = false;
        for (int i=0;i<n;i++) 
            if (matrix[0][i]==0) {
                row_has_zero = true;
                break;
            }
        for (int i=0;i<m;i++)
            if (matrix[i][0]==0){
                col_has_zero = true;
                break;
            }
        for (int i=1;i<m;i++) {
            for (int j=1;j<n;j++) {
                if (matrix[i][j]==0) {
                    matrix[0][j]=0;
                    matrix[i][0]=0;
                }
            }
        }
        for (int i=1;i<m;i++)
            for (int j=1;j<n;j++)
                if (matrix[0][j]==0 || matrix[i][0]==0){
                    matrix[i][j]=0;
                }
        if (row_has_zero) {
            for (int i=0;i<n;i++)
                matrix[0][i]=0;
        }
        if (col_has_zero) {
            for (int i=0;i<m;i++)
                matrix[i][0]=0;
        }
            
    }
};
2) two arrays:
class Solution {
public:
    void setZeroes(vector<vector<int> > &matrix) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        const int m=matrix.size(); //number of rows
        const int n=matrix[0].size(); //number of columns
        vector<bool> rows(m,false);
        vector<bool> cols(n,false);
        for (int i=0;i<m; i++)
        for (int j=0;j<n;j++)
        {
            if (matrix[i][j]==0)
            {
                rows[i]=true;
                cols[j]=true;
            }
        }
        for (int i=0;i<m;i++)
        for (int j=0;j<n;j++)
        {
            if (rows[i]||cols[j])
            matrix[i][j]=0;
        }
    }
};
