/*
Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

For example,
Given [3,2,1,5,6,4] and k = 2, return 5.

Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.

Credits:
Special thanks to @mithmatt for adding this problem and creating all test cases.
*/
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
         size_t len = nums.size();
        if(len < k) return 0;

        priority_queue<int, std::vector<int>, std::greater<int>> q;
        for(auto &v : nums)
        {
            if(q.size() < k)
            {
                q.push(v);
            }
            else if (v > q.top())
            {
                q.pop();
                q.push(v);
            }
        }
        return q.top();
    }
};
