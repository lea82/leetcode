Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

class Solution {
public:
    int findMin(vector<int>& nums) {
        int l = 0, r = nums.size()-1;
        while (l<r){
            if (nums[l]<nums[r]) return nums[l];
            int mid = l + (r-l)/2;
            if (nums[mid]>=nums[l]){ //>=, because sometimes mid==l, but r is the result
                l = mid+1;
            } else {
                r = mid;
            }
        }
        return nums[l];
    }
};
